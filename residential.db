{:id #uuid "68f91c1f-c8e4-441b-9afa-83e28a5bd5a9", :form (fn [ev] (:text ev)), :links {}}
{:id #uuid "de7aaabe-8e9a-46e4-9d76-3d33b5e43277", :form {:edit (fn [prev text] (try {:emit (read-string text)} (catch Exception e {:unreadable text})))}, :links {}}
{:id #uuid "013dfaec-fb48-4685-adb1-17f85a70e8d8", :form (fn [branch sym] (fn [image] (get image (name sym)))), :links {}}
{:id #uuid "46e1dc3f-778e-446f-9a72-616149fa29e8", :form (fn [form] (with-out-str (clojure.pprint/pprint form))), :links {}}
{:form (fn [branch sym] (let [stage (ubik.core/create-code-stage branch sym) key-strokes (-> stage :event-streams :key-stroke) text-obj (-> stage :node) code-display (display branch sym) text-render (ubik.core/text-renderer text-obj) code-change (ubik.core/source-effector branch sym)] {:topology {:nodes #:ubik.codeless{:code-1 code-display, :code-2 format-code-text, :edits edits, :form form}, :sources #:ubik.codeless{:image ubik.core/image-signal, :key-strokes key-strokes}, :sinks #:ubik.codeless{:text-render text-render, :code-change code-change}, :wires #{[{:in :ubik.codeless/key-strokes} :ubik.codeless/edits] [{:in :ubik.codeless/form} :ubik.codeless/code-change] [{:edit :ubik.codeless/edits} :ubik.codeless/form] [{:in :ubik.codeless/code-2} :ubik.codeless/text-render] [{:in :ubik.codeless/code-1} :ubik.codeless/code-2] [{:in :ubik.codeless/image} :ubik.codeless/code-1]}}})), :links {display #uuid "013dfaec-fb48-4685-adb1-17f85a70e8d8", format-code-text #uuid "46e1dc3f-778e-446f-9a72-616149fa29e8", edits #uuid "68f91c1f-c8e4-441b-9afa-83e28a5bd5a9", form #uuid "de7aaabe-8e9a-46e4-9d76-3d33b5e43277"}, :id #uuid "d5cadc4c-4c70-4cb8-bd27-1411d087de4c"}
{:form (fn [branch sym] (let [stage (ubik.core/create-code-stage branch sym) key-strokes (-> stage :event-streams :key-stroke) text-obj (-> stage :node) code-display (display branch sym) text-render (ubik.core/text-renderer text-obj) code-change (ubik.core/source-effector branch sym)] {:topology {:nodes #:ubik.codeless{:code-1 (map code-display), :code-2 (map format-code-text), :edits (map edits), :form (ubik.core/make-node form)}, :sources #:ubik.codeless{:image ubik.core/image-signal, :key-strokes key-strokes}, :sinks #:ubik.codeless{:text-render text-render, :code-change code-change}, :wires #{[{:in :ubik.codeless/key-strokes} :ubik.codeless/edits] [:ubik.codeless/form :ubik.codeless/code-change] [:ubik.codeless/code-2 :ubik.codeless/text-render] [{:edit :ubik.codeless/edits} :ubik.codeless/form] [{:in :ubik.codeless/code-1} :ubik.codeless/code-2] [{:in :ubik.codeless/image} :ubik.codeless/code-1]}}})), :links {display #uuid "013dfaec-fb48-4685-adb1-17f85a70e8d8", format-code-text #uuid "46e1dc3f-778e-446f-9a72-616149fa29e8", edits #uuid "68f91c1f-c8e4-441b-9afa-83e28a5bd5a9", form #uuid "de7aaabe-8e9a-46e4-9d76-3d33b5e43277"}, :id #uuid "6e901074-482d-408e-b495-ed8eae654043"}
{:form {:sources #:ubik.codeless{:image ubik.core/image-signal}, :nodes {}}, :links {}, :id #uuid "3db8f481-7fcc-499b-adc5-2b813193ed06", :time #inst "2019-03-21T12:35:54.654-00:00"}
{:form (fn [image syms] (into {} (map (fn [s] [s (get-in image [(namespace s) (name s)])])) syms)), :links {}, :id #uuid "6a6a41bc-96fc-46aa-afaa-b2517e1cc6dc", :time #inst "2019-03-21T12:37:25.659-00:00"}
{:form {:image (fn [{:keys [watch], :as state} image] (let [s' (assoc state :image image)] (if watch (assoc s' :emit s') s'))), :args (fn [{:keys [image], :as state} watch] (let [s' (assoc state :watch watch)] (if image (assoc s' :emit s') s')))}, :links {}, :id #uuid "63d1640b-177b-4ffa-8d1a-a9dce6034ed1", :time #inst "2019-03-21T12:38:02.740-00:00"}
{:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map #uuid "6a6a41bc-96fc-46aa-afaa-b2517e1cc6dc"}, :id #uuid "22e8e482-4f59-45e6-88be-a0d8d8ad4848", :time #inst "2019-03-21T12:42:44.965-00:00"}
{:form (fn [{{:keys [display format-code-text edits form]} :image, watch :watch}] (let [stage (ubik.core/create-code-stage watch) key-strokes (-> stage :event-streams :key-stroke) text-obj (-> stage :node) code-display (display watch) text-render (ubik.core/text-renderer text-obj) code-change (ubik.core/source-effector watch)] {:nodes #:ubik.codeless{:code-1 (map code-display), :code-2 (map format-code-text), :edits (map edits), :form (ubik.core/make-node form)}, :sources #:ubik.codeless{:image ubik.core/image-signal, :key-strokes key-strokes}, :sinks #:ubik.codeless{:text-render text-render, :code-change code-change}, :wires #{[{:in :ubik.codeless/key-strokes} :ubik.codeless/edits] [:ubik.codeless/form :ubik.codeless/code-change] [:ubik.codeless/code-2 :ubik.codeless/text-render] [{:edit :ubik.codeless/edits} :ubik.codeless/form] [{:in :ubik.codeless/code-1} :ubik.codeless/code-2] [{:in :ubik.codeless/image} :ubik.codeless/code-1]}})), :links {}, :id #uuid "59476105-595a-44ac-a905-e184b0c2d213", :time #inst "2019-03-21T13:52:21.049-00:00"}
{:form {:sources #:ubik.codeless{:image ubik.core/image-signal, :input input-signal}, :sinks #:ubik.codeless{:out ubik.core/topo-effector}, :nodes #:ubik.codeless{:sub-image (map extract-deps), :combined (ubik.core/make-node edit-multi), :topo (map topo-fac)}, :wires #{[:ubik.codeless/image :ubik.codeless/sub-image] [:ubik.codeless/topo :ubik.codeless/out] [:ubik.codeless/combined :ubik.codeless/topo] [{:image :ubik.codeless/sun-image, :watch :ubik.codeless/input} :ubik.codeless/combined]}}, :links {edit-multi #uuid "63d1640b-177b-4ffa-8d1a-a9dce6034ed1", extract-deps #uuid "22e8e482-4f59-45e6-88be-a0d8d8ad4848", topo-fac #uuid "59476105-595a-44ac-a905-e184b0c2d213"}, :id #uuid "9d41be7a-6459-45f7-a644-6119fe81961e", :time #inst "2019-03-21T17:31:52.881-00:00"}
{:form {:sources #:ubik.codeless{:image ubik.core/image-signal, :input ubik.core/input-signal}, :sinks #:ubik.codeless{:out ubik.core/topo-effector}, :nodes #:ubik.codeless{:sub-image (map extract-deps), :combined (ubik.core/make-node edit-multi), :topo (map topo-fac)}, :wires #{[:ubik.codeless/image :ubik.codeless/sub-image] [:ubik.codeless/topo :ubik.codeless/out] [:ubik.codeless/combined :ubik.codeless/topo] [{:image :ubik.codeless/sun-image, :watch :ubik.codeless/input} :ubik.codeless/combined]}}, :links {edit-multi #uuid "63d1640b-177b-4ffa-8d1a-a9dce6034ed1", extract-deps #uuid "22e8e482-4f59-45e6-88be-a0d8d8ad4848", topo-fac #uuid "59476105-595a-44ac-a905-e184b0c2d213"}, :id #uuid "d7d4aa61-a77c-4dc4-8387-eb741a992951", :time #inst "2019-03-21T17:40:58.273-00:00"}
{:form {:sources #:ubik.codeless{:image ubik.core/image-signal, :input ubik.core/input-signal}, :sinks #:ubik.codeless{:out ubik.core/topo-effector}, :nodes #:ubik.codeless{:sub-image (map extract-deps), :combined (ubik.core/make-node edit-multi), :topo (map topo-fac)}, :wires #{[:ubik.codeless/image :ubik.codeless/sub-image] [:ubik.codeless/topo :ubik.codeless/out] [:ubik.codeless/combined :ubik.codeless/topo] [{:image :ubik.codeless/sub-image, :watch :ubik.codeless/input} :ubik.codeless/combined]}}, :links {edit-multi #uuid "63d1640b-177b-4ffa-8d1a-a9dce6034ed1", extract-deps #uuid "22e8e482-4f59-45e6-88be-a0d8d8ad4848", topo-fac #uuid "59476105-595a-44ac-a905-e184b0c2d213"}, :id #uuid "e57b6bf0-1b7f-4b9b-85a4-15126b4efd2b", :time #inst "2019-03-21T17:55:45.916-00:00"}
{:form {:image (fn [{:keys [watch], :as state} image] (let [s' (assoc state :image image)] (if watch (assoc s' :emit s') s'))), :watch (fn [{:keys [image], :as state} watch] (let [s' (assoc state :watch watch)] (if image (assoc s' :emit s') s')))}, :links {}, :id #uuid "df9b93b3-7431-4049-8008-80248c292491", :time #inst "2019-03-21T21:15:35.139-00:00"}
{:form {:sources #:ubik.codeless{:image ubik.core/image-signal, :input ubik.core/input-signal}, :sinks #:ubik.codeless{:out ubik.core/topo-effector}, :nodes #:ubik.codeless{:sub-image (map extract-deps), :combined (ubik.core/make-node edit-multi), :topo (map topo-fac)}, :wires #{[:ubik.codeless/image :ubik.codeless/sub-image] [:ubik.codeless/topo :ubik.codeless/out] [:ubik.codeless/combined :ubik.codeless/topo] [{:image :ubik.codeless/sub-image, :watch :ubik.codeless/input} :ubik.codeless/combined]}}, :links {edit-multi #uuid "df9b93b3-7431-4049-8008-80248c292491", extract-deps #uuid "22e8e482-4f59-45e6-88be-a0d8d8ad4848", topo-fac #uuid "59476105-595a-44ac-a905-e184b0c2d213"}, :id #uuid "ecb0cc85-15bd-402b-95a9-babf91583f44", :time #inst "2019-03-21T21:17:04.779-00:00"}
{:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map #uuid "e03eccd4-f7ae-43ae-a107-97d97eafa255"}, :id #uuid "8dd1928f-ffac-4471-b8fa-7085186a080e", :time #inst "2019-03-21T22:33:31.229-00:00"}
{:form {:sources #:ubik.codeless{:image ubik.core/image-signal, :input ubik.core/input-signal}, :sinks #:ubik.codeless{:out ubik.core/topo-effector}, :nodes #:ubik.codeless{:sub-image (map extract-deps), :combined (ubik.core/make-node edit-multi), :topo (map topo-fac)}, :wires #{[:ubik.codeless/image :ubik.codeless/sub-image] [:ubik.codeless/topo :ubik.codeless/out] [:ubik.codeless/combined :ubik.codeless/topo] [{:image :ubik.codeless/sub-image, :watch :ubik.codeless/input} :ubik.codeless/combined]}}, :links {edit-multi #uuid "df9b93b3-7431-4049-8008-80248c292491", extract-deps #uuid "8dd1928f-ffac-4471-b8fa-7085186a080e", topo-fac #uuid "59476105-595a-44ac-a905-e184b0c2d213"}, :id #uuid "7ab9c4d0-78b4-43db-a800-da8b7dd9ffc1", :time #inst "2019-03-21T22:34:00.779-00:00"}
{:form (fn [image syms] (into {} (map (fn [s] (let [ref (get-in image [(namespace s) (name s)])] [(:ns/symbol ref) (ubik.core/invoke-by-id (:id ref))]))) syms)), :links {}, :id #uuid "2acb74ea-1fef-47e1-a4fd-2ea885f281b9", :time #inst "2019-03-21T22:42:44.262-00:00"}
{:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map #uuid "2acb74ea-1fef-47e1-a4fd-2ea885f281b9"}, :id #uuid "fec71d27-96c3-4a65-9a7a-82476925bdea", :time #inst "2019-03-21T22:43:19.103-00:00"}
{:form {:sources #:ubik.codeless{:image ubik.core/image-signal, :input ubik.core/input-signal}, :sinks #:ubik.codeless{:out ubik.core/topo-effector}, :nodes #:ubik.codeless{:sub-image (map extract-deps), :combined (ubik.core/make-node edit-multi), :topo (map topo-fac)}, :wires #{[:ubik.codeless/image :ubik.codeless/sub-image] [:ubik.codeless/topo :ubik.codeless/out] [:ubik.codeless/combined :ubik.codeless/topo] [{:image :ubik.codeless/sub-image, :watch :ubik.codeless/input} :ubik.codeless/combined]}}, :links {edit-multi #uuid "df9b93b3-7431-4049-8008-80248c292491", extract-deps #uuid "8dd1928f-ffac-4471-b8fa-7085186a080e", topo-fac #uuid "fec71d27-96c3-4a65-9a7a-82476925bdea"}, :id #uuid "09531fdc-0aa3-4130-a08b-714c2fb60716", :time #inst "2019-03-21T22:43:42.293-00:00"}
{:form {:sources #:ubik.codeless{:image ubik.core/image-signal, :input ubik.core/input-signal}, :sinks #:ubik.codeless{:out ubik.core/topo-effector}, :nodes #:ubik.codeless{:sub-image (map extract-deps), :combined (ubik.core/make-node edit-multi), :topo (map topo-fac)}, :wires #{[:ubik.codeless/image :ubik.codeless/sub-image] [:ubik.codeless/topo :ubik.codeless/out] [:ubik.codeless/combined :ubik.codeless/topo] [{:image :ubik.codeless/sub-image, :watch :ubik.codeless/input} :ubik.codeless/combined]}}, :links {edit-multi #uuid "df9b93b3-7431-4049-8008-80248c292491", extract-deps #uuid "fec71d27-96c3-4a65-9a7a-82476925bdea", topo-fac #uuid "59476105-595a-44ac-a905-e184b0c2d213"}, :id #uuid "9e1531d0-2712-460c-a186-bc59ed88dd46", :time #inst "2019-03-21T22:50:53.897-00:00"}
