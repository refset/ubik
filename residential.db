{:form (fn [sym] (fn [image] (get image sym))), :links {}, :id #uuid "81df67e2-01b7-45a7-a22d-a56da9ccd95e", :time #inst "2019-03-22T22:01:46.314-00:00"}
{:form (fn [form] (with-out-str (pprint form))), :links {}, :id #uuid "05abc4d9-9c43-4c69-bf43-48d91d714eb5", :time #inst "2019-03-22T22:02:06.716-00:00"}
{:form {:edit (fn [prev text] (try {:emit (read-string text)} (catch Exception e {:unreadable text})))}, :links {}, :id #uuid "5c3d7b4d-b616-44d8-b6be-f877fd1711df", :time #inst "2019-03-22T22:03:04.482-00:00"}
{:form (fn [ev] (:text ev)), :links {}, :id #uuid "a179a2af-0243-4f47-96fc-3cc2199ec05e", :time #inst "2019-03-22T22:03:26.132-00:00"}
{:form (fn [image syms] (into {} (map (fn [s] (let [ref (get-in image [(namespace s) (name s)])] [(:ns/symbol ref) (invoke-by-id (:id ref))]))) syms)), :links {}, :id #uuid "6b0fc0a5-ea99-41b0-b4e2-884f7abe0433", :time #inst "2019-03-22T22:03:55.262-00:00"}
{:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map #uuid "6b0fc0a5-ea99-41b0-b4e2-884f7abe0433"}, :id #uuid "c6ac1861-bd41-41e4-980e-8fd03e334113", :time #inst "2019-03-22T22:04:37.093-00:00"}
{:form {:image (fn [{:keys [watch], :as state} image] (let [s' (assoc state :image image)] (if watch (assoc s' :emit s') s'))), :watch (fn [{:keys [image], :as state} watch] (let [s' (assoc state :watch watch)] (if image (assoc s' :emit s') s')))}, :links {}, :id #uuid "5854b093-746e-4d0f-a4c5-84f715354b57", :time #inst "2019-03-22T22:04:54.534-00:00"}
{:form (fn [{{:keys [display format-code-text edits form]} :image, watch :watch}] (let [stage (create-code-stage watch) key-strokes (-> stage :event-streams :key-stroke) text-obj (-> stage :node) code-display (display watch) text-render (text-renderer text-obj) code-change (source-effector watch)] {:nodes #:ed{:code-1 (process (map code-display)), :code-2 (process (map format-code-text)), :edits (process (map edits)), :form (make-node form), :key-strokes key-strokes, :text-render (effector text-render), :code-change (effector code-change)}, :wires #{[:ed/form :ed/code-change] [:ed/code-1 :ed/code-2] [:ed/key-strokes :ed/edits] [:ubik.topology/image :ed/code-1] [:ed/code-2 :ed/text-render] [{:edit :ed/edits} :ed/form]}})), :links {}, :id #uuid "0c888a87-4072-4a57-818f-1844d13cfd91", :time #inst "2019-03-22T22:14:13.007-00:00"}
{:form {:nodes #:mt{:input (signal), :sub-image (process (map extract-deps)), :combined (make-node edit-multi), :topo (process (map topo-fac)), :out (effector topo-effector)}, :wires #{[{:image :mt/sub-image, :watch :ubik.codeless/input} :mt/combined] [:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image]}}, :links {edit-multi #uuid "5854b093-746e-4d0f-a4c5-84f715354b57", extract-deps #uuid "c6ac1861-bd41-41e4-980e-8fd03e334113", topo-fac #uuid "0c888a87-4072-4a57-818f-1844d13cfd91"}, :id #uuid "e2a3ec9d-a690-41c9-8ac8-1ad70f6d264a", :time #inst "2019-03-22T22:15:02.300-00:00"}
{:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[{:image :mt/sub-image, :watch :ubik.codeless/input} :mt/combined] [:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image]}}, :links {edit-multi #uuid "5854b093-746e-4d0f-a4c5-84f715354b57", extract-deps #uuid "c6ac1861-bd41-41e4-980e-8fd03e334113", topo-fac #uuid "0c888a87-4072-4a57-818f-1844d13cfd91"}, :id #uuid "65817d55-eac2-4570-9ea6-b89840810bb8", :time #inst "2019-03-22T22:35:16.743-00:00"}
{:form (fn [{{:keys [display format-code-text edits form]} :image, watch :watch}] (let [stage (create-code-stage watch) key-strokes (-> stage :event-streams :key-stroke) text-obj (-> stage :node) code-display (display watch) text-render (text-renderer text-obj) code-change (source-effector watch)] {:nodes [(process :ed/code-1 (map code-display)) (process :ed/code-2 (map format-code-text)) (process :ed/edits (map edits)) (make-node :ed/form form) key-strokes (effector :ed/text-render text-render) (effector :ed/code-change code-change)], :wires #{[:ed/form :ed/code-change] [:ed/code-1 :ed/code-2] [:ed/key-strokes :ed/edits] [:ubik.topology/image :ed/code-1] [:ed/code-2 :ed/text-render] [{:edit :ed/edits} :ed/form]}})), :links {}, :id #uuid "2fb13a14-bf6f-496e-8ef3-1de092209840", :time #inst "2019-03-22T22:40:03.648-00:00"}
{:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[{:image :mt/sub-image, :watch :ubik.codeless/input} :mt/combined] [:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image]}}, :links {edit-multi #uuid "5854b093-746e-4d0f-a4c5-84f715354b57", extract-deps #uuid "c6ac1861-bd41-41e4-980e-8fd03e334113", topo-fac #uuid "2fb13a14-bf6f-496e-8ef3-1de092209840"}, :id #uuid "2a700163-c1d8-48d4-bee0-7e0d36fc230f", :time #inst "2019-03-22T22:40:20.961-00:00"}
{:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi #uuid "5854b093-746e-4d0f-a4c5-84f715354b57", extract-deps #uuid "c6ac1861-bd41-41e4-980e-8fd03e334113", topo-fac #uuid "2fb13a14-bf6f-496e-8ef3-1de092209840"}, :id #uuid "3efe9592-7ece-4410-ae20-541ce6e91b6a", :time #inst "2019-03-23T13:53:57.303-00:00"}
{:form (fn [{{:keys [core/display core/format-code-text core/edits core/form]} :image, watch :watch}] (let [stage (create-code-stage watch) key-strokes (-> stage :event-streams :key-stroke) text-obj (-> stage :node) code-display (display watch) text-render (text-renderer text-obj) code-change (source-effector watch)] {:nodes [(process :ed/code-1 (map code-display)) (process :ed/code-2 (map format-code-text)) (process :ed/edits (map edits)) (make-node :ed/form form) key-strokes (effector :ed/text-render text-render) (effector :ed/code-change code-change)], :wires #{[:ed/form :ed/code-change] [:ed/code-1 :ed/code-2] [:ed/key-strokes :ed/edits] [:ubik.topology/image :ed/code-1] [:ed/code-2 :ed/text-render] [{:edit :ed/edits} :ed/form]}})), :links {}, :id #uuid "e0085372-0ca5-438d-8e51-6a2835cacf1d", :time #inst "2019-03-23T15:34:46.231-00:00"}
{:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi #uuid "5854b093-746e-4d0f-a4c5-84f715354b57", extract-deps #uuid "c6ac1861-bd41-41e4-980e-8fd03e334113", topo-fac #uuid "e0085372-0ca5-438d-8e51-6a2835cacf1d"}, :id #uuid "9a684f42-a723-4b64-92b2-2a43ad7d643b", :time #inst "2019-03-23T15:35:14.053-00:00"}
{:form (fn [{{:keys [core/display core/format-code-text core/edits core/form]} :image, watch :watch}] (let [stage (create-code-stage watch) key-strokes (-> stage :event-streams :key-stroke) text-obj (-> stage :node) code-display (display watch) text-render (text-renderer text-obj) code-change (source-effector watch)] {:nodes [(process :ed/code-1 (map code-display)) (process :ed/code-2 (map format-code-text)) (process :ed/edits (map edits)) (make-node :ed/form form) (assoc key-strokes :name :ed/key-strokes) (effector :ed/text-render text-render) (effector :ed/code-change code-change)], :wires #{[:ed/form :ed/code-change] [:ed/code-1 :ed/code-2] [:ed/key-strokes :ed/edits] [:ubik.topology/image :ed/code-1] [:ed/code-2 :ed/text-render] [{:edit :ed/edits} :ed/form]}})), :links {}, :id #uuid "ae2c08fe-164b-44bf-9b0b-c595ba762095", :time #inst "2019-03-23T15:56:05.986-00:00"}
{:form (fn [{{:keys [core/display core/format-code-text core/edits core/form]} :image, watch :watch}] (let [stage (create-code-stage watch) key-strokes (-> stage :event-streams :key-stroke) text-obj (-> stage :node) code-display (display watch) text-render (text-renderer text-obj) code-change (source-effector watch)] {:nodes [(process :ed/code-1 (map code-display)) (process :ed/code-2 (map format-code-text)) (process :ed/edits (map edits)) (make-node :ed/form form) key-strokes (effector :ed/text-render text-render) (effector :ed/code-change code-change)], :wires #{[:ed/form :ed/code-change] [:ed/code-1 :ed/code-2] [[:ubik.events/text-area watch :key-stroke] :ed/edits] [:ubik.topology/image :ed/code-1] [:ed/code-2 :ed/text-render] [{:edit :ed/edits} :ed/form]}})), :links {}, :id #uuid "0fa69760-841f-4ff8-ad41-c97d9788dbd0", :time #inst "2019-03-23T15:57:05.491-00:00"}
{:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi #uuid "5854b093-746e-4d0f-a4c5-84f715354b57", extract-deps #uuid "c6ac1861-bd41-41e4-980e-8fd03e334113", topo-fac #uuid "0fa69760-841f-4ff8-ad41-c97d9788dbd0"}, :id #uuid "7e0c7523-be2f-40fe-b8eb-fb04779df0be", :time #inst "2019-03-23T15:57:31.171-00:00"}
{:form (let [ref (get-in image [(namespace s) (name s)])] [(:ns/symbol ref) (invoke-by-id (:id ref))]), :links {}, :id #uuid "630a511b-bec8-46c1-b1cc-59bd90e5c3be", :time #inst "2019-03-24T18:49:42.776-00:00"}
{:form (fn [image syms] (into {} (map ns-lookup) syms)), :links {ns-lookup #uuid "630a511b-bec8-46c1-b1cc-59bd90e5c3be"}, :id #uuid "67a80c9b-6445-40c5-8ff3-ab91da7f1e60", :time #inst "2019-03-24T18:50:27.513-00:00"}
{:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map #uuid "67a80c9b-6445-40c5-8ff3-ab91da7f1e60"}, :id #uuid "66d9c2af-5b0b-4d0b-98a7-4ab673e74e15", :time #inst "2019-03-24T18:52:46.306-00:00"}
{:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi #uuid "5854b093-746e-4d0f-a4c5-84f715354b57", extract-deps #uuid "66d9c2af-5b0b-4d0b-98a7-4ab673e74e15", topo-fac #uuid "0fa69760-841f-4ff8-ad41-c97d9788dbd0"}, :id #uuid "088866fe-1d08-45fa-9197-37153ba2d658", :time #inst "2019-03-24T18:53:17.431-00:00"}
{:form (fn [image sym] (let [ref (get-in image [(namespace sym) (name sym)])] [(:ns/symbol ref) (invoke-by-id (:id ref))])), :links {}, :id #uuid "3f1615d8-3146-4eb2-94cd-232ff57e5dcc", :time #inst "2019-03-24T18:56:19.264-00:00"}
{:form (fn [sym] (fn [image] (lookup image sym))), :links {lookup #uuid "630a511b-bec8-46c1-b1cc-59bd90e5c3be"}, :id #uuid "f343352a-9bb7-4b36-84a0-dc1d7d27f39b", :time #inst "2019-03-24T18:56:19.265-00:00"}
{:form (fn [image syms] (into {} (map (partial ns-lookup image)) syms)), :links {ns-lookup #uuid "630a511b-bec8-46c1-b1cc-59bd90e5c3be"}, :id #uuid "4216e846-4538-4050-b65c-cf9c9aff1437", :time #inst "2019-03-24T18:56:19.273-00:00"}
{:form (fn [sym] (fn [image] (lookup image sym))), :links {lookup #uuid "3f1615d8-3146-4eb2-94cd-232ff57e5dcc"}, :id #uuid "07326abc-5a59-463e-9cab-52aa639030cb", :time #inst "2019-03-24T18:57:06.885-00:00"}
{:form (fn [image syms] (into {} (map (partial ns-lookup image)) syms)), :links {ns-lookup #uuid "3f1615d8-3146-4eb2-94cd-232ff57e5dcc"}, :id #uuid "6dc2b544-50d1-4326-8d6e-fd736a21dd7a", :time #inst "2019-03-24T18:57:06.886-00:00"}
{:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map #uuid "6dc2b544-50d1-4326-8d6e-fd736a21dd7a"}, :id #uuid "162444b2-dbf7-49c2-bd3d-d778793d2f12", :time #inst "2019-03-24T18:58:44.409-00:00"}
{:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi #uuid "5854b093-746e-4d0f-a4c5-84f715354b57", extract-deps #uuid "162444b2-dbf7-49c2-bd3d-d778793d2f12", topo-fac #uuid "0fa69760-841f-4ff8-ad41-c97d9788dbd0"}, :id #uuid "45c7c2eb-a823-4c58-8cec-4734f0e104a7", :time #inst "2019-03-24T18:59:11.512-00:00"}
{:form (fn [image sym] (let [ref (get-in image [(namespace sym) (name sym)])] [(:ns/symbol ref) (edit (:id ref))])), :links {}, :id #uuid "9bcbecb6-a1af-4f6d-b699-b6981a69f83d", :time #inst "2019-03-25T18:17:41.028-00:00"}
{:form (fn [sym] (fn [image] (second (lookup image sym)))), :links {lookup {:ref :core/ns-lookup, :time #inst "2019-03-25T18:12:03.485-00:00"}}, :id #uuid "2e02cb00-f3a1-43d3-8487-7ae241277a11", :time #inst "2019-03-25T18:17:41.028-00:00"}
