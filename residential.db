{:time #inst "2019-03-26T22:40:40.034-00:00", :sha1 "3fc939a454728b707ae89b57de8816656ccdad0e", :snippet {:form (fn [ev] (:text ev)), :links {}}}
{:time #inst "2019-03-26T22:40:42.146-00:00", :sha1 "1024163555ab6e30df014db5677b3260be708258", :snippet {:form {:edit (fn [prev text] (try {:emit (read-string text)} (catch Exception e {:unreadable text})))}, :links {}}}
{:time #inst "2019-03-26T22:40:44.160-00:00", :sha1 "ab2fca1200ce644ff4af607beaf3bba12e2d0518", :snippet {:form (fn [form] (with-out-str (pprint form))), :links {}}}
{:time #inst "2019-03-26T22:40:45.968-00:00", :sha1 "6a61ed710da21fd941d5eb6d45320fab2a3f58f4", :snippet {:form (fn [image sym] (get-in image [(namespace sym) (name sym)])), :links {}}}
{:time #inst "2019-03-26T22:42:19.853-00:00", :sha1 "85d48f9d677796ddd07aacbfe64029ded1e5edd8", :snippet {:form (fn [image syms] (into {} (map (partial ns-lookup image)) syms)), :links {ns-lookup "2a9bb711a55ce33f91d74f3dbb0e2c83919fa218"}}}
{:time #inst "2019-03-26T22:42:37.848-00:00", :sha1 "fe13fa46c99badc9743195996c99431f3a32a410", :snippet {:form {:image (fn [{:keys [watch], :as state} image] (let [s' (assoc state :image image)] (if watch (assoc s' :emit s') s'))), :watch (fn [{:keys [image], :as state} watch] (let [s' (assoc state :watch watch)] (if image (assoc s' :emit s') s')))}, :links {}}}
{:time #inst "2019-03-26T22:42:43.106-00:00", :sha1 "8a769c97bafe9f367fe817678652537cbd2d5b64", :snippet {:form (fn [{{:keys [core/display core/format-code-text core/edits core/form]} :image, watch :watch}] (let [stage (create-code-stage watch) key-strokes (-> stage :event-streams :key-stroke) text-obj (-> stage :node) code-display (display watch) text-render (text-renderer text-obj) code-change (source-effector watch)] {:nodes [(process :ed/code-1 (map code-display)) (process :ed/code-2 (map format-code-text)) (process :ed/edits (map edits)) (make-node :ed/form form) key-strokes (effector :ed/text-render text-render) (effector :ed/code-change code-change)], :wires #{[:ed/form :ed/code-change] [:ed/code-1 :ed/code-2] [[:ubik.events/text-area watch :key-stroke] :ed/edits] [:ubik.topology/image :ed/code-1] [:ed/code-2 :ed/text-render] [{:edit :ed/edits} :ed/form]}})), :links {}}}
{:time #inst "2019-03-26T22:44:43.107-00:00", :sha1 "7001c42daec32392fb68c9ff6cfc6bcb218b32bb", :snippet {:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map {:ref :core/fn-map, :time #inst "2019-03-26T22:44:40.378-00:00"}}}}
{:time #inst "2019-03-26T22:45:04.467-00:00", :sha1 "c33aca0b8fc0bafde2d01ebe973f302861bae0a5", :snippet {:form (fn [sym] (fn [image] (second (lookup image sym)))), :links {lookup {:ref :core/fn-snippet, :time #inst "2019-03-26T22:44:58.041-00:00"}}}}
{:time #inst "2019-03-26T22:45:49.874-00:00", :sha1 "784f82d1c28e8361f2a043ed5c0effe25c5539bf", :snippet {:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi {:ref :core/edit-multi, :time #inst "2019-03-26T22:45:31.198-00:00"}, EXTRACT-deps {:ref :core/extract-deps, :time #inst "2019-03-26T22:45:31.198-00:00"}, topo-fac {:ref :core/snip-edit-topology, :time #inst "2019-03-26T22:45:31.198-00:00"}}}}
{:time #inst "2019-03-26T22:49:18.360-00:00", :sha1 "f1c09406b3d5c6ea26ede254387a10d482257f52", :snippet {:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi {:ref :core/edit-multi, :time #inst "2019-03-26T22:45:31.198-00:00"}, extract-deps {:ref :core/extract-deps, :time #inst "2019-03-26T22:45:31.198-00:00"}, topo-fac {:ref :core/snip-edit-topology, :time #inst "2019-03-26T22:45:31.198-00:00"}}}}
{:time #inst "2019-03-26T22:58:38.988-00:00", :sha1 "93746ef4609f4fc411d5a1817a1c883a34a8acc1", :snippet {:form (fn [image sym] (let [ref (ns-ref image sym)] [(:name ref) (edit (:ref ref))])), :links {ns-ref "6a61ed710da21fd941d5eb6d45320fab2a3f58f4"}}}
{:time #inst "2019-03-26T22:58:38.990-00:00", :sha1 "01cf0b5b4baaaebf2bce7abea2d75ed6532e8c13", :snippet {:form (fn [image sym] (invoke-by-id (:ref (ns-ref image sym)))), :links {ns-ref "6a61ed710da21fd941d5eb6d45320fab2a3f58f4"}}}
{:time #inst "2019-03-26T22:59:25.868-00:00", :sha1 "3bd4dacd8d78010369a262da4f71b16cc2655090", :snippet {:form (fn [image syms] (into {} (map (partial ns-lookup image)) syms)), :links {ns-lookup "01cf0b5b4baaaebf2bce7abea2d75ed6532e8c13"}}}
{:time #inst "2019-03-26T23:00:00.872-00:00", :sha1 "6442d6550f9e8ab15e94afe7d5a7dc828a0dc847", :snippet {:form (fn [sym] (fn [image] (second (lookup image sym)))), :links {lookup {:ref :core/fn-snippet, :time #inst "2019-03-26T22:59:54.099-00:00"}}}}
{:time #inst "2019-03-26T23:00:29.734-00:00", :sha1 "8f0c88f99196c1e1b1f84c1d5acee6136e2269b8", :snippet {:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map {:ref :core/fn-map, :time #inst "2019-03-26T23:00:10.453-00:00"}}}}
{:time #inst "2019-03-26T23:00:38.424-00:00", :sha1 "8549d813c7035bd8e9a71c4d4d2b6bebc8a04be1", :snippet {:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi {:ref :core/edit-multi, :time #inst "2019-03-26T22:45:31.198-00:00"}, extract-deps {:ref :core/extract-deps, :time #inst "2019-03-26T23:00:37.223-00:00"}, topo-fac {:ref :core/snip-edit-topology, :time #inst "2019-03-26T22:45:31.198-00:00"}}}}
{:time #inst "2019-03-26T23:07:44.847-00:00", :sha1 "e5ea80eaece6468bf4b4b622dd0934969f843c99", :snippet {:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map {:ref :core/fn-map, :time #inst "2019-03-26T23:07:43.011-00:00"}}}}
{:time #inst "2019-03-27T01:03:22.662-00:00", :sha1 "8089627e22a94a6170547a184c5b4c7c99973c52", :snippet {:form (fn [image sym] (println sym) (get-in image [(namespace sym) (name sym)])), :links {}}}
{:time #inst "2019-03-27T01:04:07.885-00:00", :sha1 "7f9311638e9c6839c11e7e8e14aa7aff3c4bd8ed", :snippet {:form (fn [image sym] (invoke-by-id (:ref (ns-ref image sym)))), :links {ns-ref "8089627e22a94a6170547a184c5b4c7c99973c52"}}}
{:time #inst "2019-03-27T01:04:40.755-00:00", :sha1 "a8e4b901efed7ec0b1262a7efe81af3d7310b371", :snippet {:form (fn [image syms] (into {} (map (partial ns-lookup image)) syms)), :links {ns-lookup "7f9311638e9c6839c11e7e8e14aa7aff3c4bd8ed"}}}
{:time #inst "2019-03-27T01:04:55.783-00:00", :sha1 "3b96aca02c7c08135b43646c3eb5cf366e01babd", :snippet {:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map {:ref :core/fn-map, :time #inst "2019-03-27T01:04:54.563-00:00"}}}}
{:time #inst "2019-03-27T01:05:25.351-00:00", :sha1 "ae15d2663032a25872c3c11e175c124efc0aa1d1", :snippet {:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi {:ref :core/edit-multi, :time #inst "2019-03-26T22:45:31.198-00:00"}, extract-deps {:ref :core/extract-deps, :time #inst "2019-03-27T01:05:23.348-00:00"}, topo-fac {:ref :core/snip-edit-topology, :time #inst "2019-03-26T22:45:31.198-00:00"}}}}
{:time #inst "2019-03-27T01:37:10.013-00:00", :sha1 "023d3759608e392c42719c17df6e59043240317f", :snippet {:form (fn [sym] (fn [image] (lookup image sym))), :links {lookup {:ref :core/fn-snippet, :time #inst "2019-03-26T22:59:54.099-00:00"}}}}
{:time #inst "2019-03-27T01:40:15.446-00:00", :sha1 "d30b4c5acbd03ac846e259970fcddf193b50dc81", :snippet {:form (fn [image sym] (let [ref (ns-ref image sym)] [(:name ref) (invoke-by-id (:ref ref))])), :links {ns-ref "8089627e22a94a6170547a184c5b4c7c99973c52"}}}
{:time #inst "2019-03-27T01:40:34.172-00:00", :sha1 "0097ac1d63fa2f89b0d4a8c088f4a933e6e81fc5", :snippet {:form (fn [image syms] (into {} (map (partial ns-lookup image)) syms)), :links {ns-lookup "6a61ed710da21fd941d5eb6d45320fab2a3f58f4"}}}
{:time #inst "2019-03-27T01:42:18.355-00:00", :sha1 "34cabaf4446c48c8cdf402b2eadeee80f7ae6269", :snippet {:form (fn [image syms] (into {} (map (partial ns-lookup image)) syms)), :links {ns-lookup "d30b4c5acbd03ac846e259970fcddf193b50dc81"}}}
{:time #inst "2019-03-27T01:42:36.084-00:00", :sha1 "a43dac6d1c6d53bd31691c0bdf7ce03c7c5d86e0", :snippet {:form (fn [image] (fn-map image [:core/display :core/format-code-text :core/edits :core/form])), :links {fn-map {:ref :core/fn-map, :time #inst "2019-03-27T01:42:34.675-00:00"}}}}
{:time #inst "2019-03-27T01:42:52.638-00:00", :sha1 "9eaaec234fe2bb249c948cbe7cc0b56deaf14b1a", :snippet {:form {:nodes [(signal :mt/input) (process :mt/sub-image (map extract-deps)) (make-node :mt/combined edit-multi) (process :mt/topo (map topo-fac)) (effector :mt/out topo-effector)], :wires #{[:mt/topo :mt/out] [:mt/combined :mt/topo] [:ubik.topology/image :mt/sub-image] [{:image :mt/sub-image, :watch :mt/input} :mt/combined]}}, :links {edit-multi {:ref :core/edit-multi, :time #inst "2019-03-26T22:45:31.198-00:00"}, extract-deps {:ref :core/extract-deps, :time #inst "2019-03-27T01:42:51.180-00:00"}, topo-fac {:ref :core/snip-edit-topology, :time #inst "2019-03-26T22:45:31.198-00:00"}}}}
