#+TITLE: lemonade

Experiment in higher order visual programming.

Check out [[https://github.com/tgetgood/expanse][Expanse]] to see it in use.

* Overview
	This is both a library for doing vector graphics in a data driven idiomatic
	clojure fashion and a framework for making interactive graphics / animations /
	UIs using that library.

	These two parts will likely be separated at a future date, but since the is
	mostly an experiment at present, it's far more convenient to keep them
	together.
* Breakdown
	 =lemonade.core=: The core graphics primitives.

	=lemonade.math=: Mathematical and interop helpers.

	=lemonade.geometry=: Geometric model of the rendered world to map back and
	forth from screen coordinates to the leaves of the render tree.

	=lemonade.events=: Event processing logic. N.B.: This is being thoroughly
	rethought and is not to be considered stable.

	Renderers are in =lemonade.renderers.*=. There are currently only 2, an HTML
	Canvas 2d rendering context renderer for the browser and a quil renderer for
	JVM Clojure. As of this writing the canvas renderer is fully functional and
	the quil renderer is a joke.
* Getting Started
** Install
	 To get an interactive development environment run:

#+BEGIN_SRC
	 lein figwheel
#+END_SRC

	 and open your browser at [localhost:3449](http://localhost:3449/).  This will
	 auto compile and send all changes to the browser without the need to
	 reload. After the compilation process is complete, you will get a Browser
	 Connected REPL. An easy way to try it is:

#+BEGIN_SRC
	 (js/alert "Am I connected?")
#+END_SRC

	 and you should see an alert in the browser window.
** Play
	 [[https://github.com/tgetgood/expanse][Expanse]] is the place to go if you want to play with running code.
* License

	Copyright Â© 2018 Thomas Getgood

	Distributed under the Eclipse Public License either version 1.0 or (at your
	option) any later version.
